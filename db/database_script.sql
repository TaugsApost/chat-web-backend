-- MySQL Script generated by MySQL Workbench
-- Mon Dec  5 19:51:43 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema chat_web_db
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `chat_web_db` ;

-- -----------------------------------------------------
-- Schema chat_web_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `chat_web_db` DEFAULT CHARACTER SET utf8 ;
USE `chat_web_db` ;

-- -----------------------------------------------------
-- Table `chat_web_db`.`tb_usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `chat_web_db`.`tb_usuario` ;

CREATE TABLE IF NOT EXISTS `chat_web_db`.`tb_usuario` (
  `username` VARCHAR(10) NOT NULL,
  `nome` VARCHAR(50) NOT NULL,
  `senha` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`username`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `chat_web_db`.`tb_contato`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `chat_web_db`.`tb_contato` ;

CREATE TABLE IF NOT EXISTS `chat_web_db`.`tb_contato` (
  `username_usuario` VARCHAR(10) NOT NULL,
  `username_contato` VARCHAR(10) NOT NULL,
  `nomeContato` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`username_usuario`, `username_contato`),
  INDEX `fk_contato_idx` (`username_contato` ASC) VISIBLE,
  CONSTRAINT `fk_contato`
    FOREIGN KEY (`username_contato`)
    REFERENCES `chat_web_db`.`tb_usuario` (`username`),
  CONSTRAINT `fk_usuario`
    FOREIGN KEY (`username_usuario`)
    REFERENCES `chat_web_db`.`tb_usuario` (`username`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `chat_web_db`.`tb_grupo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `chat_web_db`.`tb_grupo` ;

CREATE TABLE IF NOT EXISTS `chat_web_db`.`tb_grupo` (
  `id_grupo` BIGINT NOT NULL AUTO_INCREMENT,
  `dataAlteracao` TIMESTAMP NULL DEFAULT NULL,
  `nome` VARCHAR(20) NOT NULL,
  `dataCriacao` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`id_grupo`))
ENGINE = InnoDB
AUTO_INCREMENT = 27
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `chat_web_db`.`tb_mensagem`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `chat_web_db`.`tb_mensagem` ;

CREATE TABLE IF NOT EXISTS `chat_web_db`.`tb_mensagem` (
  `id_mensagem` BIGINT NOT NULL AUTO_INCREMENT,
  `dataEnvio` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `conteudo` VARCHAR(500) NOT NULL,
  PRIMARY KEY (`id_mensagem`))
ENGINE = InnoDB
AUTO_INCREMENT = 175
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_bin;


-- -----------------------------------------------------
-- Table `chat_web_db`.`tb_mensagem_chat`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `chat_web_db`.`tb_mensagem_chat` ;

CREATE TABLE IF NOT EXISTS `chat_web_db`.`tb_mensagem_chat` (
  `id_mensagem_chat` BIGINT NOT NULL,
  `usuario_emissor` VARCHAR(10) NOT NULL,
  `usuario_receptor` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`id_mensagem_chat`),
  INDEX `fk_emissor_mensagem_idx` (`usuario_emissor` ASC) VISIBLE,
  INDEX `fk_receptor_mensagem_idx` (`usuario_receptor` ASC) VISIBLE,
  CONSTRAINT `fk_emissor_mensagem`
    FOREIGN KEY (`usuario_emissor`)
    REFERENCES `chat_web_db`.`tb_usuario` (`username`),
  CONSTRAINT `fk_mensagem_chat`
    FOREIGN KEY (`id_mensagem_chat`)
    REFERENCES `chat_web_db`.`tb_mensagem` (`id_mensagem`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_receptor_mensagem`
    FOREIGN KEY (`usuario_receptor`)
    REFERENCES `chat_web_db`.`tb_usuario` (`username`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `chat_web_db`.`tb_participante`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `chat_web_db`.`tb_participante` ;

CREATE TABLE IF NOT EXISTS `chat_web_db`.`tb_participante` (
  `username` VARCHAR(10) NOT NULL,
  `id_grupo` BIGINT NOT NULL,
  `dataInscricao` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`username`, `id_grupo`),
  INDEX `fk_grupo_idx` (`id_grupo` ASC) VISIBLE,
  CONSTRAINT `fk_grupo`
    FOREIGN KEY (`id_grupo`)
    REFERENCES `chat_web_db`.`tb_grupo` (`id_grupo`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_participante_usuario`
    FOREIGN KEY (`username`)
    REFERENCES `chat_web_db`.`tb_usuario` (`username`)
    ON DELETE CASCADE
    ON UPDATE RESTRICT)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;


-- -----------------------------------------------------
-- Table `chat_web_db`.`tb_mensagem_grupo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `chat_web_db`.`tb_mensagem_grupo` ;

CREATE TABLE IF NOT EXISTS `chat_web_db`.`tb_mensagem_grupo` (
  `id_mensagem_grupo` BIGINT NOT NULL,
  `id_grupo` BIGINT NOT NULL,
  `usuario_emissor` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`id_mensagem_grupo`),
  INDEX `fk_grupo_mensagem_idx` (`id_grupo` ASC, `usuario_emissor` ASC) VISIBLE,
  CONSTRAINT `fk_mensagem_grupo`
    FOREIGN KEY (`id_mensagem_grupo`)
    REFERENCES `chat_web_db`.`tb_mensagem` (`id_mensagem`)
    ON DELETE CASCADE,
  CONSTRAINT `fk_participante_mensagem`
    FOREIGN KEY (`id_grupo` , `usuario_emissor`)
    REFERENCES `chat_web_db`.`tb_participante` (`id_grupo` , `username`)
    ON DELETE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb3;

USE `chat_web_db`;

DELIMITER $$

USE `chat_web_db`$$
DROP TRIGGER IF EXISTS `chat_web_db`.`tb_grupo_BEFORE_INSERT` $$
USE `chat_web_db`$$
CREATE
DEFINER=`root`@`%`
TRIGGER `chat_web_db`.`tb_grupo_BEFORE_INSERT`
BEFORE INSERT ON `chat_web_db`.`tb_grupo`
FOR EACH ROW
BEGIN
set new.dataAlteracao = current_date();
set new.dataCriacao = current_date();
END$$


USE `chat_web_db`$$
DROP TRIGGER IF EXISTS `chat_web_db`.`update_dataAlteracao` $$
USE `chat_web_db`$$
CREATE
DEFINER=`root`@`%`
TRIGGER `chat_web_db`.`update_dataAlteracao`
BEFORE UPDATE ON `chat_web_db`.`tb_grupo`
FOR EACH ROW
begin 
	set new.dataAlteracao = current_date();
	if(old.dataCriacao IS NULL)then
		set new.dataCriacao = CURRENT_DATE(); 
	end if;	
	if(old.dataCriacao IS NOT NULL)then
		set new.dataCriacao = old.dataCriacao;
	end if;
end$$


USE `chat_web_db`$$
DROP TRIGGER IF EXISTS `chat_web_db`.`max_participantes` $$
USE `chat_web_db`$$
CREATE
DEFINER=`root`@`%`
TRIGGER `chat_web_db`.`max_participantes`
BEFORE INSERT ON `chat_web_db`.`tb_participante`
FOR EACH ROW
BEGIN
	if ((SELECT count(p.id_grupo) from tb_participante p where p.id_grupo = new.id_grupo) > 4) then
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Numero maximo de participantes atingido';
	end if ;
END$$


USE `chat_web_db`$$
DROP TRIGGER IF EXISTS `chat_web_db`.`tb_participante_BEFORE_INSERT` $$
USE `chat_web_db`$$
CREATE
DEFINER=`root`@`%`
TRIGGER `chat_web_db`.`tb_participante_BEFORE_INSERT`
BEFORE INSERT ON `chat_web_db`.`tb_participante`
FOR EACH ROW
BEGIN
set new.dataInscricao = current_date();
END$$


USE `chat_web_db`$$
DROP TRIGGER IF EXISTS `chat_web_db`.`delete_group` $$
USE `chat_web_db`$$
CREATE
DEFINER=`root`@`%`
TRIGGER `chat_web_db`.`delete_group`
AFTER DELETE ON `chat_web_db`.`tb_mensagem_grupo`
FOR EACH ROW
begin
	delete from tb_grupo grupo where (
		select count(msg.id_grupo) from tb_mensagem_grupo msg where msg.id_grupo = grupo.id_grupo
	) = 0;
end$$


USE `chat_web_db`$$
DROP TRIGGER IF EXISTS `chat_web_db`.`trg_insert_data_alteracao_grupo` $$
USE `chat_web_db`$$
CREATE
DEFINER=`root`@`%`
TRIGGER `chat_web_db`.`trg_insert_data_alteracao_grupo`
AFTER INSERT ON `chat_web_db`.`tb_mensagem_grupo`
FOR EACH ROW
begin
		update tb_grupo g
			set dataAlteracao = CURRENT_DATE() where new.id_grupo = g.id_grupo;
	end$$


USE `chat_web_db`$$
DROP TRIGGER IF EXISTS `chat_web_db`.`trg_update_data_alteracao_grupo` $$
USE `chat_web_db`$$
CREATE
DEFINER=`root`@`%`
TRIGGER `chat_web_db`.`trg_update_data_alteracao_grupo`
AFTER UPDATE ON `chat_web_db`.`tb_mensagem_grupo`
FOR EACH ROW
begin
		update tb_grupo
			set dataAlteracao = CURRENT_DATE() where new.id_grupo = id_grupo;
	end$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
